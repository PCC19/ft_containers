==14954== Memcheck, a memory error detector
==14954== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==14954== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==14954== Command: ./a_stl
==14954== 
==14954==Shadow memory range interleaves with an existing memory mapping. ASan cannot proceed correctly. ABORTING.
==14954==ASan shadow was supposed to be located in the [0x00007fff7000-0x10007fff7fff] range.
==14954==This might be related to ELF_ET_DYN_BASE change in Linux 4.12.
==14954==See https://github.com/google/sanitizers/issues/856 for possible workarounds.
==14954==Process memory map follows:
	0x000000400000-0x00000055a000	/media/sf_ft_containers/a_stl
	0x00000075a000-0x00000075b000	/media/sf_ft_containers/a_stl
	0x00000075b000-0x00000075f000	/media/sf_ft_containers/a_stl
	0x00000075f000-0x000001445000	
	0x000004000000-0x000004027000	/lib/x86_64-linux-gnu/ld-2.27.so
	0x000004027000-0x00000403c000	
	0x000004041000-0x000004057000	
	0x000004227000-0x000004228000	/lib/x86_64-linux-gnu/ld-2.27.so
	0x000004228000-0x000004229000	/lib/x86_64-linux-gnu/ld-2.27.so
	0x000004229000-0x00000422a000	
	0x00000422a000-0x00000422b000	
	0x000004a2a000-0x000004a2b000	/usr/lib/valgrind/vgpreload_core-amd64-linux.so
	0x000004a2b000-0x000004c2a000	/usr/lib/valgrind/vgpreload_core-amd64-linux.so
	0x000004c2a000-0x000004c2b000	/usr/lib/valgrind/vgpreload_core-amd64-linux.so
	0x000004c2b000-0x000004c2c000	/usr/lib/valgrind/vgpreload_core-amd64-linux.so
	0x000004c2c000-0x000004c3b000	/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so
	0x000004c3b000-0x000004e3a000	/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so
	0x000004e3a000-0x000004e3b000	/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so
	0x000004e3b000-0x000004e3c000	/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so
	0x000004e3c000-0x000004fb5000	/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25
	0x000004fb5000-0x0000051b5000	/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25
	0x0000051b5000-0x0000051bf000	/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25
	0x0000051bf000-0x0000051c1000	/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25
	0x0000051c1000-0x0000051c5000	
	0x0000051c5000-0x000005362000	/lib/x86_64-linux-gnu/libm-2.27.so
	0x000005362000-0x000005561000	/lib/x86_64-linux-gnu/libm-2.27.so
	0x000005561000-0x000005562000	/lib/x86_64-linux-gnu/libm-2.27.so
	0x000005562000-0x000005563000	/lib/x86_64-linux-gnu/libm-2.27.so
	0x000005563000-0x00000557d000	/lib/x86_64-linux-gnu/libpthread-2.27.so
	0x00000557d000-0x00000577c000	/lib/x86_64-linux-gnu/libpthread-2.27.so
	0x00000577c000-0x00000577d000	/lib/x86_64-linux-gnu/libpthread-2.27.so
	0x00000577d000-0x00000577e000	/lib/x86_64-linux-gnu/libpthread-2.27.so
	0x00000577e000-0x000005782000	
	0x000005782000-0x000005789000	/lib/x86_64-linux-gnu/librt-2.27.so
	0x000005789000-0x000005988000	/lib/x86_64-linux-gnu/librt-2.27.so
	0x000005988000-0x000005989000	/lib/x86_64-linux-gnu/librt-2.27.so
	0x000005989000-0x00000598a000	/lib/x86_64-linux-gnu/librt-2.27.so
	0x00000598a000-0x00000598d000	/lib/x86_64-linux-gnu/libdl-2.27.so
	0x00000598d000-0x000005b8c000	/lib/x86_64-linux-gnu/libdl-2.27.so
	0x000005b8c000-0x000005b8d000	/lib/x86_64-linux-gnu/libdl-2.27.so
	0x000005b8d000-0x000005b8e000	/lib/x86_64-linux-gnu/libdl-2.27.so
	0x000005b8e000-0x000005ba5000	/lib/x86_64-linux-gnu/libgcc_s.so.1
	0x000005ba5000-0x000005da4000	/lib/x86_64-linux-gnu/libgcc_s.so.1
	0x000005da4000-0x000005da5000	/lib/x86_64-linux-gnu/libgcc_s.so.1
	0x000005da5000-0x000005da6000	/lib/x86_64-linux-gnu/libgcc_s.so.1
	0x000005da6000-0x000005f8d000	/lib/x86_64-linux-gnu/libc-2.27.so
	0x000005f8d000-0x00000618d000	/lib/x86_64-linux-gnu/libc-2.27.so
	0x00000618d000-0x000006191000	/lib/x86_64-linux-gnu/libc-2.27.so
	0x000006191000-0x000006193000	/lib/x86_64-linux-gnu/libc-2.27.so
	0x000006193000-0x0000064e9000	
	0x0000064e9000-0x0000068e9000	
	0x000058000000-0x00005823b000	/usr/lib/valgrind/memcheck-amd64-linux
	0x00005843b000-0x000058441000	/usr/lib/valgrind/memcheck-amd64-linux
	0x000058441000-0x000059e43000	
	0x001002001000-0x001008c12000	
	0x001008c8c000-0x001008cac000	
	0x001008cac000-0x001008cae000	
	0x001008cae000-0x001008dae000	
	0x001008dae000-0x001008db0000	
	0x001008db0000-0x001008db1000	/tmp/vgdb-pipe-shared-mem-vgdb-14954-by-user42-on-???
	0x001008db1000-0x00100affd000	
	0x00100b0fd000-0x00100b4fd000	
	0x00100b6fd000-0x00100b8fd000	
	0x00100b9fd000-0x00100bbfd000	
	0x00100bdf2000-0x00100c034000	
	0x001ffeffe000-0x001fff001000	
	0x7ffe8fc0c000-0x7ffe8fc2d000	[stack]
	0x7ffe8fcdf000-0x7ffe8fce2000	[vvar]
	0xffffffffff600000-0xffffffffff601000	[vsyscall]
==14954==End of process memory map.
==14954== 
==14954== HEAP SUMMARY:
==14954==     in use at exit: 32 bytes in 1 blocks
==14954==   total heap usage: 9 allocs, 8 frees, 380 bytes allocated
==14954== 
==14954== 32 bytes in 1 blocks are still reachable in loss record 1 of 1
==14954==    at 0x4C31B25: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==14954==    by 0x598B7F4: _dlerror_run (dlerror.c:140)
==14954==    by 0x598B165: dlsym (dlsym.c:70)
==14954==    by 0x4E9CA4: __interception::GetRealFunctionAddress(char const*, unsigned long*, unsigned long, unsigned long) (in /media/sf_ft_containers/a_stl)
==14954==    by 0x4C3B13: __asan::InitializeAsanInterceptors() (in /media/sf_ft_containers/a_stl)
==14954==    by 0x4E5AA3: __asan::AsanInitInternal() [clone .part.0] (in /media/sf_ft_containers/a_stl)
==14954==    by 0x4010855: _dl_init (dl-init.c:104)
==14954==    by 0x40010C9: ??? (in /lib/x86_64-linux-gnu/ld-2.27.so)
==14954== 
==14954== LEAK SUMMARY:
==14954==    definitely lost: 0 bytes in 0 blocks
==14954==    indirectly lost: 0 bytes in 0 blocks
==14954==      possibly lost: 0 bytes in 0 blocks
==14954==    still reachable: 32 bytes in 1 blocks
==14954==         suppressed: 0 bytes in 0 blocks
==14954== 
==14954== For counts of detected and suppressed errors, rerun with: -v
==14954== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
